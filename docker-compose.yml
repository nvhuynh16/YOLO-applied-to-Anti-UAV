# Docker Compose configuration for Anti-UAV Drone Detection API
# This provides a production-ready deployment setup following MLOps best practices

version: '3.8'

services:
  # Main inference API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: anti-uav-api
    ports:
      - "8000:8000"
    volumes:
      # Mount trained model weights (read-only)
      - ./runs/train/yolov8n_light/weights:/app/models:ro
      # Mount configuration files (read-only)
      - ./configs:/app/configs:ro
      # Mount outputs directory for logging
      - ./outputs:/app/outputs
    environment:
      # Production environment variables
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - anti-uav-network

  # Optional: Add nginx reverse proxy for production
  # nginx:
  #   image: nginx:alpine
  #   container_name: anti-uav-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - api
  #   networks:
  #     - anti-uav-network

networks:
  anti-uav-network:
    driver: bridge

# Example usage:
# 1. Build: docker-compose build
# 2. Run: docker-compose up -d
# 3. Check logs: docker-compose logs -f api
# 4. Stop: docker-compose down
# 5. Test: curl http://localhost:8000/health
